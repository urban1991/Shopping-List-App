{"version":3,"sources":["context.js","components/Layouts/Header.js","components/Layouts/Footer.js","components/Lists/InputForm.js","components/Lists/EditDialog.js","components/Lists/ProductList.js","store.js","components/App.js","index.js"],"names":["createContext","Provider","Consumer","withContext","Component","props","value","useStyles","makeStyles","theme","header","letterSpacing","flex","breakpoints","down","padding","button","margin","spacing","color","backgroundColor","width","toolBar","flexDirection","localStorageSave","clearList","shoppingList","classes","AppBar","position","Toolbar","className","Typography","variant","Button","onClick","size","startIcon","doc","jsPDF","setFontSize","text","map","el","index","name","quantity","unit","window","open","output","print","onIndexSelect","e","onCategorySelect","categories","renderCategories","category","Tab","key","label","getIndex","selectedCategory","findIndex","Paper","Tabs","this","onChange","indicatorColor","textColor","scrollButtons","InputForm","state","getInitialState","handleChange","target","setState","handleSubmit","onSubmit","id","toLowerCase","replace","MenuItem","renderUnits","units","product","TextField","FormControl","InputLabel","htmlFor","Select","type","disabled","React","withStyles","display","marginTop","marginRight","height","handleToggle","handleFormSubmit","onEdit","selectedProduct","Dialog","onClose","DialogTitle","DialogContent","paper","overflowY","textField","container","up","productsByCategory","onProductAdd","onSelect","onDelete","renderedProducts","items","List","component","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","Grid","item","xs","sm","length","Number","parseFloat","reduce","acc","InputProps","readOnly","App","handleLocaleStorageSave","localStorage","setItem","JSON","stringify","handleClearList","clear","handleCategorySelect","handleProductAdd","handleProductEdit","filter","handleProductSelect","find","handleProductDelete","getContext","getProductsByCategories","onSelectItem","handleSelectItem","parse","getItem","Object","entries","shoppingItem","CssBaseline","createMuiTheme","palette","main","lightGreen","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.3a98d9e2.chunk.js","sourcesContent":["import React, { createContext } from 'react';\r\n\r\nexport const { Provider, Consumer } = createContext();\r\n\r\n\r\nexport const withContext = Component => props => (\r\n    <Consumer>\r\n      {value =>\r\n        <Component {...value} {...props} />\r\n      }\r\n    </Consumer>\r\n)","import React from 'react';\r\nimport {AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as jsPDF from 'jspdf';\r\nimport { withContext } from '../../context';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        letterSpacing: '4px',\r\n        flex: \"1\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: '10px'\r\n        }\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      color: 'white',\r\n      backgroundColor: 'inherit',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '100%',\r\n        letterSpacing: '4px'\r\n      }\r\n    },\r\n    toolBar: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column'\r\n        }\r\n    }\r\n  }));\r\n\r\n\r\nconst Header = ({ localStorageSave, clearList, shoppingList }) => {\r\n\r\n    const print = () => {\r\n        const doc = new jsPDF();\r\n        doc.setFontSize(16);\r\n        doc.text(30, 30, shoppingList.map((el,index) => `${index + 1}. ${el.name} ${el.quantity} ${el.unit}`))\r\n\r\n        window.open(doc.output('bloburl'), '_blank');\r\n    }\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" >\r\n            <Toolbar className={classes.toolBar}>\r\n                <Typography variant=\"h4\" className={classes.header}>\r\n                    SHOPPING LIST\r\n                </Typography>\r\n                <Button\r\n                    onClick={() => localStorageSave()}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button\r\n                    onClick={() => clearList()}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    className={classes.button}\r\n                    startIcon={<DeleteIcon />}\r\n                >\r\n                    Clear\r\n                </Button>\r\n                <Button\r\n                    onClick={() => print()}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    className={classes.button}\r\n                    startIcon={<PrintIcon />}\r\n                >\r\n                    Print\r\n                </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default withContext(Header);","import React, { Component } from 'react';\r\nimport { Paper, Tabs } from '@material-ui/core';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { withContext } from '../../context';\r\n\r\nclass Footer extends Component {\r\n\r\n    onIndexSelect = (e, index) => {\r\n        const { onCategorySelect, categories } = this.props;\r\n        onCategorySelect(index === '' ? 0 : categories[index - 1])\r\n    }\r\n\r\n    renderCategories = () => {\r\n        const { categories } = this.props;\r\n        return categories.map(category => {\r\n            return <Tab key={ category } label={ category } />\r\n        });\r\n    } \r\n\r\n    getIndex = () => {\r\n        const { selectedCategory, categories } = this.props;\r\n        return selectedCategory ? categories.findIndex(category => category === selectedCategory) + 1 : 0;\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <Paper>\r\n                <Tabs\r\n                 value={this.getIndex()}\r\n                 onChange={this.onIndexSelect}\r\n                 indicatorColor=\"primary\"\r\n                 textColor=\"primary\"\r\n                 variant=\"scrollable\"\r\n                 scrollButtons=\"auto\"\r\n                >\r\n                <Tab label=\"All\" />\r\n                 {this.renderCategories()}\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withContext(Footer);","import React from 'react'\r\nimport { TextField, InputLabel, MenuItem, FormControl, Select, Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Consumer } from '../../context';\r\n\r\nconst styles = theme => ({\r\n    FormControl: {\r\n        display: 'flex',\r\n        flex: 1\r\n    },\r\n    text: {\r\n        marginTop: 20,\r\n        marginRight: 20,\r\n        width: 187\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        width: 188,\r\n        height: 55\r\n    }\r\n});\r\n\r\nclass InputForm extends React.Component {\r\n    state = this.getInitialState()\r\n\r\n    getInitialState() {\r\n        const { product } = this.props;\r\n\r\n        return product || {\r\n            name: '',\r\n            unit: '',\r\n            quantity: '',\r\n            category: ''    \r\n        }\r\n    }\r\n\r\n    handleChange = name => ({target: { value }}) =>\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n    handleSubmit = () => {\r\n        this.props.onSubmit({\r\n            id: this.state.name.toLowerCase().replace(/ /g, '-'),\r\n            ...this.state\r\n        });\r\n\r\n        this.setState(this.getInitialState())\r\n    }\r\n\r\n    renderCategories = categories => {\r\n        return categories.map(category => <MenuItem key={category} value={category}>{category}</MenuItem> \r\n    )} \r\n\r\n    renderUnits = units => {\r\n        return units.map(unit => <MenuItem key={unit} value={unit}>{unit}</MenuItem> \r\n    )} \r\n\r\n    render() {\r\n        const { name, unit, quantity, category } = this.state,\r\n              { classes, product } = this.props;\r\n        return (\r\n            <Consumer>\r\n                {({ categories, units }) => (\r\n                    <form>\r\n                        <TextField\r\n                            className={classes.FormControl}\r\n                            label=\"Product Name\"\r\n                            variant=\"outlined\"\r\n                            value={name}\r\n                            onChange={this.handleChange('name')}\r\n                            />\r\n                        <br/>\r\n                        <FormControl variant=\"outlined\" className={classes.FormControl} >\r\n                            <InputLabel htmlFor=\"category\" >Category</InputLabel>\r\n                            <Select\r\n                                value={category}\r\n                                onChange={this.handleChange('category')}\r\n                                label=\"Category\"\r\n                            >\r\n                            {this.renderCategories(categories)}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            className={classes.text}\r\n                            label=\"Quantity\"\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            value={quantity}\r\n                            onChange={this.handleChange('quantity')}\r\n                        />\r\n                        <FormControl variant=\"outlined\" className={classes.text} >\r\n                            <InputLabel htmlFor=\"unit\" >Unit</InputLabel>\r\n                            <Select\r\n                                label=\"Unit\"\r\n                                value={unit}\r\n                                onChange={this.handleChange('unit')}\r\n                                >\r\n                                {this.renderUnits(units)}\r\n                            </Select>\r\n                        </FormControl> \r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}    \r\n                            onClick={this.handleSubmit}\r\n                            disabled={!name || !category || !quantity || !unit}\r\n                            >\r\n                            {product ? 'Edit' : 'Add'}\r\n                        </Button>\r\n                    </form>\r\n                )}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(InputForm);","import React, { Fragment } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport InputForm from './InputForm';\r\nimport { withContext } from '../../context';\r\n\r\n\r\nclass EditDialog extends React.Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleToggle = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = product => {\r\n        this.handleToggle()\r\n    \r\n        this.props.onEdit(product)\r\n    }\r\n\r\n    render() {\r\n        const { selectedProduct } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <EditOutlinedIcon  onClick={this.handleToggle}/>\r\n                <Dialog \r\n                    open={this.state.open}\r\n                    onClose={this.handleToggle}\r\n                >\r\n                    <DialogTitle>Edit Product</DialogTitle>\r\n                    <DialogContent>\r\n                        <InputForm \r\n                            product={selectedProduct}\r\n                            onSubmit={this.handleFormSubmit}\r\n                        />\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withContext(EditDialog);\r\n","import React, { Fragment } from 'react'\r\nimport { TextField, Grid, Paper, Typography, List, ListItem, ListItemText,\r\n         ListItemSecondaryAction, IconButton } from '@material-ui/core';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport InputForm from './InputForm';\r\nimport EditDialog from './EditDialog';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withContext } from '../../context';\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: { padding: 30, marginTop: 20, height: 'calc(100% - 40px)', overflowY: 'auto' },\r\n    textField: { width: 187, marginRight: 20, marginTop: 20 },\r\n    '@global': {\r\n        'html, body, #root': {\r\n            height: '100%'\r\n        }\r\n    },\r\n    container: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: 'calc(100% - 64px - 48px)'\r\n        },\r\n    },\r\n    header:{\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column'\r\n        }\r\n    }\r\n});\r\n\r\nconst ProductList = ({ shoppingList, productsByCategory, selectedCategory, onProductAdd,\r\n                       onSelect, onDelete, classes }) => {\r\n\r\n    const totalWeight = () => {\r\n        if(shoppingList.length === 0) return 0;\r\n        const weights = shoppingList.map(el => el.unit !== 'pcs.' ? Number.parseFloat(el.quantity) : 0)\r\n        return  weights.reduce((acc, el) => acc + el, 0) \r\n    }\r\n\r\n    const renderedProducts = productsByCategory.map(([ category, items]) => \r\n        !selectedCategory || selectedCategory === category \r\n        ?   <Fragment key={category}>\r\n                <Typography variant=\"h5\">\r\n                    {category}\r\n                </Typography>\r\n                <List component=\"ul\">\r\n                    {items.map(({ name, unit, quantity, id }) => \r\n                        <ListItem key={id} button >\r\n                            <ListItemText primary={name} secondary={`${quantity} ${unit}`} />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton onClick={() => onSelect(id)}>\r\n                                    <EditDialog />\r\n                                </IconButton>\r\n                                <IconButton onClick={() => onDelete(id)}>\r\n                                    <DeleteOutlinedIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n          </Fragment>\r\n         : null\r\n    )\r\n\r\n    return (\r\n       <Grid container className={classes.container}>\r\n            <Grid item xs={12} sm={6}>\r\n                <Paper className={classes.paper}>\r\n                    <InputForm  \r\n                        onSubmit={onProductAdd}\r\n                    /> \r\n                    <TextField\r\n                        className={classes.textField}\r\n                        label=\"Total weight\"\r\n                        value={`${totalWeight()} kg`}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                    />\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        label=\"Total quantity\"\r\n                        value={shoppingList.length}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <Paper className={classes.paper}>\r\n                    {renderedProducts}\r\n                </Paper>\r\n            </Grid>\r\n       </Grid>\r\n    );\r\n};\r\n\r\nexport default withContext(withStyles(styles)(ProductList));","export const categories = [\r\n    'Vegetables', 'Fruits','Drinks', 'Meats', 'Clothing', 'Jewelry', \r\n    'Health and Hygiene', 'Furniture', 'RTV/AGD', 'Sport/Hobby',\r\n    'Food Products', 'Others'\r\n];\r\n\r\nexport const units = [\r\n    'kg', 'pcs.', 'l'\r\n]\r\n// For development \r\nexport const shoppingList = [\r\n    {\r\n        id: 'apples',\r\n        name: 'Apples',\r\n        unit: 'g',\r\n        quantity: '500',\r\n        category: 'Fruits'\r\n    },\r\n    {\r\n        id: 'peaches',\r\n        name: 'Peaches',\r\n        unit: 'g',\r\n        quantity: '500',\r\n        category: 'Fruits'\r\n    },\r\n    {\r\n        id: 'radio',\r\n        name: 'Radio',\r\n        unit: 'pc.',\r\n        quantity: '1',\r\n        category: 'RTV/AGD'\r\n    },\r\n    {\r\n        id: 'tv',\r\n        name: 'TV',\r\n        unit: 'pc.',\r\n        quantity: '1',\r\n        category: 'RTV/AGD'\r\n    },\r\n    {\r\n        id: 'boots',\r\n        name: 'Boots',\r\n        unit: 'pc.',\r\n        quantity: '1',\r\n        category: 'Clothing'\r\n    },\r\n    {\r\n        id: 'coffee',\r\n        name: 'Coffee',\r\n        unit: 'g',\r\n        quantity: '250',\r\n        category: 'Food Products'\r\n    },\r\n\r\n\r\n];","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Header from './Layouts/Header';\r\nimport Footer from './Layouts/Footer';\r\nimport ProductList from './Lists/ProductList';\r\nimport { categories, units } from '../store';\r\nimport { Provider } from '../context';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    shoppingList: [],\r\n    selectedCategory: null,\r\n    selectedProduct: {},\r\n  }\r\n\r\n  componentDidMount() {\r\n    const shoppingList = JSON.parse(localStorage.getItem(\"shoppingList\") || \"[]\");\r\n    this.setState({ shoppingList });\r\n  }\r\n\r\n  handleLocaleStorageSave = () => {\r\n    localStorage.setItem('shoppingList',JSON.stringify(this.state.shoppingList))\r\n  }\r\n\r\n  handleClearList = () => {\r\n    localStorage.clear();\r\n    this.setState({ shoppingList: [] })\r\n  }\r\n\r\n  getProductsByCategories() {\r\n    return Object.entries(\r\n      this.state.shoppingList.reduce((shoppingList, shoppingItem) => {\r\n        const { category } = shoppingItem;\r\n\r\n        shoppingList[category] = shoppingList[category] ?\r\n        [...shoppingList[category], shoppingItem] : [shoppingItem];\r\n\r\n        return shoppingList;\r\n      }, {})\r\n    )\r\n  }\r\n  \r\n  handleCategorySelect = category => \r\n    this.setState({\r\n      selectedCategory: category\r\n    })\r\n\r\n  handleProductAdd = product => \r\n    this.setState(({ shoppingList }) => ({\r\n      shoppingList: [...shoppingList, product]\r\n    }))\r\n\r\n  handleProductEdit = product => \r\n    this.setState(({ shoppingList }) => ({\r\n      shoppingList: [\r\n        ...shoppingList.filter(el => el.id !== product.id),\r\n        product\r\n      ],\r\n      product\r\n    }))\r\n    \r\n  handleProductSelect = id => \r\n    this.setState(({ shoppingList }) => ({\r\n      selectedProduct: shoppingList.find(product => product.id === id)\r\n    }))\r\n\r\n  handleProductDelete = id => \r\n    this.setState(({ shoppingList }) => ({\r\n      shoppingList: shoppingList.filter(product => product.id !== id)\r\n    }))\r\n\r\n  getContext = () => ({\r\n    categories,\r\n    units,\r\n    ...this.state,\r\n    productsByCategory: this.getProductsByCategories(),\r\n    onCategorySelect: this.handleCategorySelect,\r\n    onEdit: this.handleProductEdit,\r\n    onDelete: this.handleProductDelete,\r\n    onProductAdd: this.handleProductAdd,\r\n    onSelect: this.handleProductSelect,\r\n    onSelectItem: this.handleSelectItem,\r\n    clearList: this.handleClearList,\r\n    localStorageSave: this.handleLocaleStorageSave\r\n    \r\n  })  \r\n    \r\n  render() {  \r\n    return ( \r\n      <Provider value={this.getContext()}>\r\n        <CssBaseline />\r\n\r\n        <Header />\r\n\r\n        <ProductList />\r\n\r\n        <Footer />\r\n\r\n      </Provider>\r\n    );\r\n  };\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { ThemeProvider, createMuiTheme  } from '@material-ui/core/styles';\r\nimport lightGreen from '@material-ui/core/colors/lightGreen';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#33691e',\r\n    },\r\n    secondary: lightGreen,\r\n\r\n  },\r\n});\r\n\r\n\r\nReactDOM.render(\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}